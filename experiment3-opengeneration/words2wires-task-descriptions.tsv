generalArea	specificArea	platform	taskName	taskDescription
# Basics				
Input	Digital - Button	Arduino Uno	input-digital-button	Create a device with a single push button, that turns on an I/O pin when the button is pressed, and turns off that same I/O pin when the button is not pressed.
Input	Digital - Multiple Buttons	Arduino Uno	input-digital-multiple-buttons	Create a device with 4 push buttons, that turns on an I/O pin when exactly 2 of the buttons button are pressed, and turns off that same I/O pin otherwise.
Input	Analog - Potentiometer	Arduino Uno	input-analog-potentiometer	Create a device that reads the analog input from a potentiometer configured as a voltage divider and sourced by 5V.  When the input is greater than or equal to 2.5V, it should turn on an I/O pin, while if the input is below 2.5V it should turn off the I/O pin.
Protocols	Serial	Arduino Uno	protocols-serial	Create a device that reads the Serial port at 9600 baud.  Whenever the string "hello" is transmitted to the device, it will respond by sending "world".
Protocols	I2C	Arduino Uno	protocols-i2c	Create a device that reads a value from an I2C device, and displays that value to the serial port every second.  The device address is 0x50, the register to read is 0x15, and the value is 8 bits long.  The value should be displayed in base 10.
Protocols	SPI	Arduino Uno	protocols-spi	Create a device that connects to another device using SPI.  Whenever the string "hello" is transmitted to the device, it will respond by sending "world".
Protocols	SD Card	Arduino Uno	protocols-sd	Create a device that opens a file called "out.txt" on an SD card, and and every 10 seconds, randomly prints one of the following animal names (as well as a newline character): cat, dog, mouse, parrot.
Output	Motor - DC	Arduino Uno	output-motor-dc	Create a device that oscillates between spinning a DC motor one direction then the other direction every 5 seconds. 
Output	Motor - Stepper	Arduino Uno	output-motor-stepper	Create a device that oscillates the output of a stepper motor clockwise then counterclockwise 45 degrees, every 5 seconds.
Output	Motor - Servo	Arduino Uno	output-motor-servo	Create a device that contiuously moves a hobby servo back and forth from 45 degrees to 135 degrees every 5 seconds.
Output	LED - Blink	Arduino Uno	output-led-blink	Create a device that blinks an LED every 500 milliseconds. 
Output	LED - Sequence	Arduino Uno	output-led-sequence	Create a device with 4 LEDs, that blink in sequence, one after the other, every 500 milliseconds.  When the end of the sequence is reached, the pattern should reset, and continue indefinitely. 
Output	LED - Neopixel	Arduino Uno	output-led-neopixel	Create a device with a neopixel (WS2812) that slowly and continuously cycles a rainbow of colors.
Output	Relay	Arduino Uno	output-relay	Create a device that turns a relay on for 2 seconds, then off for 5 seconds, continuously.  The relay coil takes 500 milliamps of current to engage.
Output	LCD - Raw	Arduino Uno	output-lcd-raw	Create a device that prints the phrase "Hello World" on a 16x2 LCD.  Use a HD44780 compatible 16x2 LCD, configured normally (i.e. without an I2C, Serial, or other simpler connection). 
Output	Sound - Buzzer	Arduino Uno	output-sound-buzzer	Create a device that continuously plays a high, medium, then low tone on a Piezo Buzzer, changing tones every second.
Output	7 Segment Display	Arduino Uno	output-7segment	Create a device that counts from 0 to 9 on a 7 segment display, indexing numbers every 500 milliseconds.  When the end of the cycle is reached, it should start again.
Output	Analog Output	Arduino Uno	output-analog	Create a device that produces a sawtooth wave, ramping up from 0V to 5V every 50 milliseconds. 
Sensors	Resistive - CDS Light Resistor	Arduino Uno	sensors-resistive-cds-cell	Create a device that reads the value from a CDS cell, and outputs it to the Serial port every second. 
Sensors	Manual Protocol - Ultrasonic	Arduino Uno	sensors-ultrasonic	Create a device that reads the distance from a HC-SR04 ultrasonic distance sensor, and outputs the distance (in centimeters) to the Serial port every second.
Sensors	I2C Protocol - Magnetic	Arduino Uno	sensors-magnetic	Create a device that reads the current magnetic field readings using a HMC5883L magnetometer.  The readings (x, y, z, and total field strength) should be output to the Serial port every second.
Logic	Interactive - Simon Game	Arduino Uno	logic-simon	Create a device that implements the popular memory game simon, where users enter progressively longer sequences of colors.  It should have 4 possible colors, and include sound when the button is touched, as well as when winning/losing.  The game should timeout if the user doesn't enter input after 5 seconds.
Logic	Non-interactive - Conway's Game of Life	Arduino Uno	logic-conway	Create a device that implements the popular Conway's Game of Life, on an 8x8 LED matrix.  The game steps should cycle every 500 milliseconds.  If the board is empty, it should randomly initialize the game again.  There should be a pushbutton that allows randomly resetting the game. 
Logic	Interactive - Clock	Arduino Uno	logic-clock	Create a device that implements a clock that prints the current time on a 16x2 character LCD display with an I2C interface.  It should have three buttons to help set the time in a user frieldly way: one to increment hours, one to increment minutes, and one to increment seconds.  The timekeeping should be performed by the Arduino, and not an external real-time clock.
Logic	Interactive - Air Temperature	Arduino Uno	logic-air-temperature-meter	Create a device that reads the current air temperature, and displays it as a color on a neopixel (WS2812). The color should be fully blue at 0C, fully red at 30C, and an interpolation of blue and red between those temperatures.
# Challenge				
Logic	Uncommon parts - nixie and radiation sensor	Arduino Uno	radioactive-dice3c	Radioactive dice: a device that uses the radiation rate from a radiation watch type 5 sensor (which outputs a digital signal, active low, depending on whether a high-energy particle has struck it at that moment or not) to determine the random seed for an electronic dice.  The device should continually read the radiation sensor, accumulate the count, and use it to help change the random seed periodically. Every 3 seconds, the device should display the roll of a 6 sided dice on a Nixie tube. It should use an IN-12 nixie tube, and K155ID1 driver.
Logic	Combinations	Arduino Uno	coffee-cup-mass3	a device that measures the mass of a coffee cup, then (knowing how much the average coffee cup holds, and how much coffee tends to weigh), it displays how full the coffee cup is using a strip of 8 neopixels.  There should be a button that allows the user to set the mass of an empty coffee cup, by placing an empty cup on it, and pressing the button. The device also measures the temperature of the coffee using a non-contact temperature sensor, and changes the color of the neopixels according to the temperature of the coffee.
Accessibility	Generic	Adafruit Huzzah32 ESP32 Feather	distance-glasses2	glasses for the blind that provide a helpful sound that corresponds to how close something is in front of them.  Should have a slide switch that can disable the sound.
Accessibility	Specific Component	Adafruit Huzzah32 ESP32 Feather	distance-glasses3	glasses for the blind that provide a helpful sound that corresponds to how close something is in front of them.  Should have a slide switch that can disable the sound.  Please use the MaxSonar ultrasonic distance sensor.
Logic	Uncommon device, some world knowledge (emojis)	Teensy 4.0	keyboard-emoji4	create a keyboard that plugs in as a USB device, but instead of a full keyboard it has only a small number of buttons. The keyboard should only have buttons for 9 popular emojis, expressed as ASCII characters.  One emoji should be a heart.  One other emoji should be a long string containing at least 5 characters.  There should be an LED that's on all the time, but blinks off for 500 milliseconds when a button is pressed.
Logic	Uncommon device, some world knowledge (emojis)	Teensy 4.0	keyboard-emoji5	create a keyboard that plugs in as a USB device, but instead of a full keyboard it has only a small number of buttons. The keyboard should only have buttons for 9 popular emojis, expressed as ASCII characters.  One emoji should be a heart.  One other emoji should be a long string containing at least 5 characters.  There should be an LED that's on all the time, but blinks off for 500 milliseconds when a button is pressed.  There should also be a buzzer, that plays very brief music (i.e. no more than a few seconds) that is of the same affect as the emoji being pressed -- for example, loving for the heart emoji, happy for a happy emoji, sad music for a sad emoji, and so forth.
Logic	Uncommon device, some world knowledge (emojis)	Teensy 4.0	keyboard-emoji6	create a keyboard that plugs in as a USB device, but instead of a full keyboard it has only a small number of buttons. The keyboard should only have buttons for 9 popular emojis, expressed as ASCII characters, not unicode.  One emoji should be a heart.  There should be an LED that's on all the time, but blinks off for 500 milliseconds when a button is pressed.  There should also be a buzzer, that plays a brief tune that is of the same affect as the emoji being pressed -- for example, a love song for the heart emoji, a happy song for a happy emoji, sad music for a sad emoji, and so forth.
Logic	Uncommon device, some world knowledge (emojis)	Teensy 4.0	keyboard-emoji6a	create a keyboard that plugs in as a USB device, but instead of a full keyboard it has only a small number of buttons. The keyboard should only have buttons for 9 popular emojis, expressed as ASCII characters, not unicode.  One emoji should be a heart.  There should be an LED that's on all the time, but blinks off for 500 milliseconds when a button is pressed.  There should also be a piezo buzzer, that plays a brief tune that is of the same affect as the emoji being pressed -- for example, a love song for the heart emoji, a happy song for a happy emoji, sad music for a sad emoji, and so forth.
Logic	Uncommon device, some world knowledge (prime numbers)	Teensy 4.0	keyboard-prime	create a keyboard that plugs in as a USB device, but instead of a full keyboard it has only a small number of buttons. The keyboard should only have buttons for the first prime numbers up to the number 20. Each prime number should have it's own button.
Accessibility	Generic	Arduino Uno	pill-alarm2	Create a pill alarm.  The alarm should have a clock that prints the current time on a 16x2 character LCD display.  If the time is 6:30am, noon, or 6:30pm, the device should raise one of 3 flags (signifying different pills need to be taken) by moving one of three servos from 0 degrees to 90 degrees.  The servos should stay up until a button is pressed, after which they're reset to the down position (0 degrees).  While raised, the servos should slowly oscaillate between 45 and 90 degrees, to help get the users attention. 
Accessibility	Generic	Arduino Uno	pill-alarm3	Create a pill alarm.  The alarm should have a clock that prints the current time on a 16x2 character LCD display.  If the time is 6:30am, noon, or 6:30pm, the device should raise one of 3 flags (signifying different pills need to be taken).  Servo 1 controls flag 1, servo 1 controls flag 2, and servo 3 controls flag 3.  When raised, the servo should move from 0 degrees to 90 degrees.  The servo should stay up until a button is pressed, after which it's reset to the down position (0 degrees).  While raised, the servos should slowly oscaillate between 45 and 90 degrees, to help get the users attention. 
Sensors	Sensors + Visualization	Arduino Uno	compass-neopixel	make a compass, that shows the current direction using a neopixel ring. The neopixel ring should have 16 neopixels. The north neopixel should always be green. The current heading neopixel should be blue.
Sensors	Sensors + Visualization	Arduino Uno	compass-neopixel2	make a compass, that shows the current direction using a neopixel ring. The neopixel ring should have 16 neopixels. The north neopixel should always be green. The current heading neopixel should be blue. It should use the MLX90393 magnetometer.
Sensors	Sensors + Visualization	Arduino Uno	compass-neopixel3	make a compass, that shows the current direction using a neopixel ring. The neopixel ring should have 16 neopixels. The north neopixel should always be green. The current heading neopixel should be blue. It should use the QST QMC5883L magnetometer.
Sensors	Sensors + Visualization	Arduino Uno	temperature-noncontact1	create a non-contact temperature sensor using the MLX90614.  The temperature should be output on a 8-pixel neopixel strip.  0 degrees or below should light  only the first neopixel.  For each 10C after, another neopixel should light.  The color of the neopixel should change according to its temperature (blue=cold, yellow/orange=warm, red=hot). 
Sensors	Sensors + Visualization	Arduino Uno	temperature-noncontact2	create a non-contact temperature sensor using the MLX90614.  The temperature should be output on a 8-pixel neopixel strip.  0 degrees or below should light only the first neopixel.  For each 10C after, another neopixel should light.  The color of the neopixel should change according to its temperature (blue=cold, green=mild, yellow=warm, orange=warmer, red=hot). 
Sensors	Sensors + Visualization	Arduino Uno	spectrometer-vis1	create a visible spectrometer that continuously displays the spectrum on an OLED display.  It should use the Hamamatsu C12666MA mini-spectrometer for the spectrometer.  The display should be a 128x64 pixel OLED with a SSD1306 controller and I2C interface.
Sensors	Sensors + Visualization	Arduino Uno	spectrometer-vis2	create a visible spectrometer that continuously displays the spectrum on an OLED display.  It should use the Hamamatsu C12666MA 5v-compatible mini-spectrometer for the spectrometer.  The display should be a 128x64 pixel OLED with a SSD1306 controller and I2C interface, also 5V compatible.
Sensors	Sensors + Visualization	Arduino Uno	spectrometer-vis3	create a visible spectrometer that continuously displays the spectrum on an OLED display.  It should use the Hamamatsu C12666MA 5v-compatible mini-spectrometer for the spectrometer (pins: 5V, GND, EOS, START, CLK, GAIN, VIDEO).  The display should be a 128x64 pixel OLED with a SSD1306 controller and I2C interface, also 5V compatible.
Sensors	Sensors + Visualization	Arduino Uno	spectrometer-vis4	create a visible spectrometer that continuously displays the spectrum on an LCD display.  It should use the Hamamatsu C12666MA 5v-compatible mini-spectrometer for the spectrometer (pins: 5V, GND, EOS, START, CLK, GAIN, VIDEO).  The display should be a 160x128 pixel TFT with a ST7735 controller and SPI interface, also 5V compatible.
Sensors	Sensors + Visualization	Arduino Uno	spectrometer-vis5	create a visible spectrometer that continuously displays the spectrum on an OLED display.  It should use the Hamamatsu C12666MA 5v-compatible mini-spectrometer for the spectrometer (pins: 5V, GND, EOS, START, CLK, GAIN, VIDEO).  The display should be a 128x128 pixel OLED with a SSD1351 controller and SPI interface, also 5V compatible (pins: GND, VIN, CD, MISO, SDCS, OLEDCS, RESET, DC, SCK, MOSI).
Logic	Input + Display	Arduino Uno	rocket-game1	make a fun arcade game about flying a rocket ship.  The game should display on a 160x128 TFT display (ST7735).  It should use an analog joystick (two analog inputs, and one switch input) for control.  For effect, it should also output to two hobby servos, which represent movable fins on the outside of the rocket ship. 
Robot	Robot	Arduino Uno	robot1	create a robot in the shape of a square that has 4 hobby servos, 2 mounted on the left side and 2 mounted on the right side. the servo horns serve as legs. the robot should walk forwards.